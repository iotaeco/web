/**
 * Gulp tasks for unit testing.
 */
const del = require("del");
const fs = require("fs");
const gulp = require("gulp");
const path = require("path");
const runSequence = require("run-sequence");
const util = require("util");
const asyncUtil = require("./util/async-util");
const display = require("./util/display");
const moduleConfig = require("./util/module-config");
const uc = require("./util/unite-config");
require("./unit-transpile");
require("./unit-runner");
require("./unit-lint");
gulp.task("unit-clean", async () => {
    const uniteConfig = await uc.getUniteConfig();
    const toClean = [
        path.join(uniteConfig.dirs.www.unitTestDist, "**/*.spec.js"),
        path.join(uniteConfig.dirs.www.reports, "unit/**/*"),
        path.join(uniteConfig.dirs.www.reports, "coverage/**/*"),
        path.join(uniteConfig.dirs.www.reports, "coverage.json"),
        path.join(uniteConfig.dirs.www.reports, "coverage-final.json")
    ];
    display.info("Cleaning", toClean);
    return del(toClean);
});
gulp.task("unit-module-config", async () => {
    const uniteConfig = await uc.getUniteConfig();
    if (uniteConfig.unitTestRunner.toLowerCase() === "karma") {
        const config = moduleConfig.create(uniteConfig, ["test", "both"], false, "/base/");
        try {
            await util.promisify(fs.writeFile)(path.join(uniteConfig.dirs.www.unitTest, "unit-module-config.js"), config);
        } catch (err) {
            display.error("Writing unit-module-config.js", err);
            process.exit(1);
        }
    }
});
gulp.task("unit", async () => {
    try {
        const uniteConfig = await uc.getUniteConfig();
        const bundleExists = await asyncUtil.fileExists(path.join(uniteConfig.dirs.www.dist, "app-bundle.js"));
        if (bundleExists) {
            display.error("Unit tests can not be run on a bundled build.");
            display.error("Run gulp build with a non bundled configuration.");
        } else {
            await util.promisify(runSequence)("unit-clean", "unit-lint", "unit-transpile", "unit-module-config", "unit-run-test");
        }
    } catch (err) {
        display.error("Unhandled error during task", err);
        process.exit(1);
    }
});
// Generated by UniteJS
